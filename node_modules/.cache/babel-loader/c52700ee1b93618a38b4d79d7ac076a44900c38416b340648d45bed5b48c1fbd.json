{"ast":null,"code":"var _jsxFileName = \"/Users/marta/Desktop/09-classy-weather/final/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getWeatherIcon(wmoCode) {\n  const icons = new Map([[[0], '☀️'], [[1], '🌤'], [[2], '⛅️'], [[3], '☁️'], [[45, 48], '🌫'], [[51, 56, 61, 66, 80], '🌦'], [[53, 55, 63, 65, 57, 67, 81, 82], '🌧'], [[71, 73, 75, 77, 85, 86], '🌨'], [[95], '🌩'], [[96, 99], '⛈']]);\n  const arr = [...icons.keys()].find(key => key.includes(wmoCode));\n  if (!arr) return 'NOT FOUND';\n  return icons.get(arr);\n}\nfunction convertToFlag(countryCode) {\n  const codePoints = countryCode.toUpperCase().split('').map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction formatDay(dateStr) {\n  return new Intl.DateTimeFormat('en', {\n    weekday: 'short'\n  }).format(new Date(dateStr));\n}\nexport default function App() {\n  _s();\n  const [location, setLocation] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [displayLocation, setDispalyLocation] = useState('');\n  const [weather, setWeather] = useState({});\n  async function fetchWeather() {\n    if (location.length < 2) return setWeather({});\n    try {\n      setIsLoading(true);\n\n      // 1) Getting location (geocoding)\n      const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${this.state.location}`);\n      const geoData = await geoRes.json();\n      console.log(geoData);\n      if (!geoData.results) throw new Error('Location not found');\n      const {\n        latitude,\n        longitude,\n        timezone,\n        name,\n        country_code\n      } = geoData.results.at(0);\n      this.setState({\n        displayLocation: `${name} ${convertToFlag(country_code)}`\n      });\n\n      // 2) Getting actual weather\n      const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`);\n      const weatherData = await weatherRes.json();\n      this.setState({\n        weather: weatherData.daily\n      });\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Classy Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loader\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9NssHyNqwd1xydtRdkoYSQ2FAzY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","getWeatherIcon","wmoCode","icons","Map","arr","keys","find","key","includes","get","convertToFlag","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","formatDay","dateStr","Intl","DateTimeFormat","weekday","format","Date","App","_s","location","setLocation","isLoading","setIsLoading","displayLocation","setDispalyLocation","weather","setWeather","fetchWeather","length","geoRes","fetch","state","geoData","json","console","log","results","Error","latitude","longitude","timezone","name","country_code","at","setState","weatherRes","weatherData","daily","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marta/Desktop/09-classy-weather/final/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction getWeatherIcon(wmoCode) {\n  const icons = new Map([\n    [[0], '☀️'],\n    [[1], '🌤'],\n    [[2], '⛅️'],\n    [[3], '☁️'],\n    [[45, 48], '🌫'],\n    [[51, 56, 61, 66, 80], '🌦'],\n    [[53, 55, 63, 65, 57, 67, 81, 82], '🌧'],\n    [[71, 73, 75, 77, 85, 86], '🌨'],\n    [[95], '🌩'],\n    [[96, 99], '⛈'],\n  ]);\n  const arr = [...icons.keys()].find((key) => key.includes(wmoCode));\n  if (!arr) return 'NOT FOUND';\n  return icons.get(arr);\n}\n\nfunction convertToFlag(countryCode) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split('')\n    .map((char) => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\n\nfunction formatDay(dateStr) {\n  return new Intl.DateTimeFormat('en', {\n    weekday: 'short',\n  }).format(new Date(dateStr));\n}\n\nexport default function App() {\n  const [location, setLocation] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [displayLocation, setDispalyLocation] = useState('');\n  const [weather, setWeather] = useState({});\n\n  async function fetchWeather() {\n    if (location.length < 2) return setWeather({});\n\n    try {\n      setIsLoading(true);\n\n      // 1) Getting location (geocoding)\n      const geoRes = await fetch(\n        `https://geocoding-api.open-meteo.com/v1/search?name=${this.state.location}`\n      );\n      const geoData = await geoRes.json();\n      console.log(geoData);\n\n      if (!geoData.results) throw new Error('Location not found');\n\n      const { latitude, longitude, timezone, name, country_code } =\n        geoData.results.at(0);\n\n      this.setState({\n        displayLocation: `${name} ${convertToFlag(country_code)}`,\n      });\n\n      // 2) Getting actual weather\n      const weatherRes = await fetch(\n        `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`\n      );\n      const weatherData = await weatherRes.json();\n      this.setState({ weather: weatherData.daily });\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Classy Weather</h1>\n      {/* <Input\n        location={this.state.location}\n        onChangeLocation={this.setLocation}\n      /> */}\n\n      {isLoading && <p className=\"loader\">Loading...</p>}\n\n      {/* {this.state.weather.weathercode && (\n        // <Weather\n        //   weather={this.state.weather}\n        //   location={this.state.displayLocation}\n        // />\n      )} */}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}